{"version":3,"sources":["components/ContactList/ContactListStyles.module.css","components/Filter/FilterStyle.module.css","components/AppStyles.module.css","components/ContactForm/ContactFormStyles.module.css","components/Filter/Filter.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/App.js","services/localStorage.js","index.js"],"names":["module","exports","Filter","value","onChangeFilter","className","styles","filterContainer","filterInput","type","onChange","e","target","ContactForm","state","name","number","handleChange","event","currentTarget","setState","handleSubmit","preventDefault","props","onSubmit","reset","nameInputId","shortid","generate","numberInputId","form","this","label","htmlFor","pattern","title","required","onInput","id","formInput","formButton","Component","ContactList","contacts","onRemoveContact","map","contact","list","onClick","listBtn","STORAGE_KEY","App","filter","addContact","task","contactId","cont","includes","alert","length","prevState","changeFilter","filterContacts","toLowerCase","removeContact","savedContacts","key","JSON","parse","localStorage","getItem","error","storage","prevProps","setItem","stringify","contactForm","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.25250484.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactListStyles_list__2aQOm\",\"contacts\":\"ContactListStyles_contacts__1Ov47\",\"listBtn\":\"ContactListStyles_listBtn__pOCIL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterContainer\":\"FilterStyle_filterContainer__nWN1R\",\"filterInput\":\"FilterStyle_filterInput__2MEuU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"AppStyles_contactForm__3Z_KA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactFormStyles_label__29vif\",\"form\":\"ContactFormStyles_form__hrbhr\",\"formInput\":\"ContactFormStyles_formInput__1lzln\",\"formButton\":\"ContactFormStyles_formButton__3wn9P\"};","import PropTypes from \"prop-types\";\nimport styles from \"./FilterStyle.module.css\";\n\nexport default function Filter({ value, onChangeFilter }) {\n  return (\n    <div className={styles.filterContainer}>\n      Find contacts by name\n      <input\n        className={styles.filterInput}\n        type=\"text\"\n        value={value}\n        onChange={(e) => onChangeFilter(e.target.value)}\n      />\n    </div>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChangeFilter: PropTypes.func.isRequired,\n};\n","import { Component } from \"react\";\nimport shortid from \"shortid\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ContactFormStyles.module.css\";\n\nexport default class ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handleChange = (event) => {\n    const { name, value } = event.currentTarget;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  nameInputId = shortid.generate();\n  numberInputId = shortid.generate();\n\n  render() {\n    return (\n      <form className={styles.form} onSubmit={this.handleSubmit}>\n        <h1>PhoneBook</h1>\n        <label className={styles.label} htmlFor={this.nameInputId}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            value={this.state.name}\n            onInput={this.handleChange}\n            id={this.nameInputId}\n            className={styles.formInput}\n          />\n        </label>\n        <label className={styles.label} htmlFor={this.numberInputId}>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            value={this.state.number}\n            onChange={this.handleChange}\n            id={this.numberInputId}\n            className={styles.formInput}\n          />\n        </label>\n        <button className={styles.formButton} type=\"submit\">\n          Add Contact\n        </button>\n      </form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import PropTypes from \"prop-types\";\nimport styles from \"./ContactListStyles.module.css\";\n\nconst ContactList = ({ contacts, onRemoveContact }) => (\n  <ul className={styles.contacts}>\n    {contacts.map((contact) => (\n      <li className={styles.list} key={contact.id}>\n        {contact.name} : {contact.number}\n        {\n          <button\n            type=\"button\"\n            name=\"delete\"\n            onClick={() => onRemoveContact(contact.id)}\n            className={styles.listBtn}\n          >\n            delete\n          </button>\n        }\n      </li>\n    ))}\n  </ul>\n);\n\nContactList.propTypes = {\n  onRemoveContact: PropTypes.func.isRequired,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\nexport default ContactList;\n","import { Component } from \"react\";\nimport shortid from \"shortid\";\nimport Filter from \"./Filter/Filter\";\nimport ContactForm from \"./ContactForm/ContactForm\";\nimport ContactList from \"./ContactList/ContactList\";\nimport * as storage from \"../services/localStorage\";\nimport styles from \"../components/AppStyles.module.css\";\n\nconst STORAGE_KEY = \"contacts\";\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    const savedContacts = storage.get(STORAGE_KEY);\n    if (savedContacts) {\n      this.setState({ contacts: savedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { contacts } = this.state;\n    if (prevState.contacts !== contacts) {\n      storage.save(STORAGE_KEY, contacts);\n    }\n  }\n\n  addContact = (task) => {\n    const contactId = shortid.generate();\n    const identicalName = this.state.contacts\n      .map((cont) => cont.name)\n      .includes(task.name);\n\n    if (identicalName) {\n      alert(`${task.name} is already in contacts`);\n    } else if (!task.name.length) {\n      alert(\"Fields must be filled!\");\n    } else {\n      const contact = {\n        id: contactId,\n        ...task,\n      };\n\n      this.setState((prevState) => ({\n        contacts: [...prevState.contacts, contact],\n      }));\n    }\n  };\n\n  changeFilter = (filter) => {\n    this.setState({ filter });\n  };\n\n  filterContacts = () => {\n    const { contacts, filter } = this.state;\n\n    return contacts.filter((contacts) =>\n      contacts.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  removeContact = (contactId) => {\n    this.setState((prevState) => {\n      return {\n        contacts: prevState.contacts.filter(({ id }) => id !== contactId),\n      };\n    });\n  };\n\n  render() {\n    const { filter } = this.state;\n    const filterContacts = this.filterContacts();\n    return (\n      <>\n        <ContactForm onSubmit={this.addContact} />\n        <h2 className={styles.contactForm}>Contacts</h2>\n        <Filter value={filter} onChangeFilter={this.changeFilter} />\n        {filterContacts.length ? (\n          <ContactList\n            contacts={filterContacts}\n            onRemoveContact={this.removeContact}\n          />\n        ) : (\n          <p className={styles.contactForm}>\n            Nothing found. Add contact or clear filter.\n          </p>\n        )}\n      </>\n    );\n  }\n}\n","const save = (key, value) => {\r\n  try {\r\n    localStorage.setItem(key, JSON.stringify(value));\r\n  } catch (error) {\r\n    return null;\r\n  }\r\n};\r\n\r\nconst get = (key) => {\r\n  try {\r\n    return JSON.parse(localStorage.getItem(key));\r\n  } catch (error) {\r\n    return null;\r\n  }\r\n};\r\n\r\nconst remove = (key) => {\r\n  try {\r\n    return localStorage.removeItem(key);\r\n  } catch (error) {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport { get, save, remove };\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}